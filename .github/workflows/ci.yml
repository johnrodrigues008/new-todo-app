name: CI - Backend & Frontend Deploy

on:
  push:
    branches:
      - master

jobs:
  backend:
    name: Backend Build, Test and Deploy to Render
    runs-on: ubuntu-latest
    env:
      SECRETKEY: ${{ secrets.SECRETKEY }}
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      RENDER_SERVICE_ID_BACKEND: ${{ secrets.RENDER_SERVICE_ID_BACKEND }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install backend dependencies
        run: |
          cd apps/backend
          npm install

      - name: Run backend tests
        run: |
          cd apps/backend
          npm test

      - name: Build backend
        run: |
          cd apps/backend
          npm run build

      - name: Deploy backend to Render
        run: |
          curl -X POST "https://api.render.com/deploy/srv-${{ env.RENDER_SERVICE_ID_BACKEND }}" \
            -H "Authorization: Bearer ${{ env.RENDER_API_KEY }}" \
            -H "Accept: application/json"

  frontend:
    name: Frontend Build, Test and Deploy to Vercel
    runs-on: ubuntu-latest
    needs: backend
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        run: |
          cd apps/frontend
          npm install

      - name: Run frontend tests
        run: |
          cd apps/frontend
          npm test

      - name: Build frontend
        run: |
          cd apps/frontend
          npm run build

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy frontend to Vercel
        run: |
          cd apps/frontend
          vercel --prod --token $VERCEL_TOKEN --yes